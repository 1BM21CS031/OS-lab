#include <stdio.h>
struct process
{
    int burst;
    int arr_time;
    int waiting_time;
    int turn_time;
};
typedef struct process proc;
void sjf(proc processes[],int n)
{
    int comp_time=0;
    float avg_tat=0;
    float avg_wait=0;
    proc temp;
    for(int i=0;i<n-1;i++)
    {
        for(int j=0;j<n-i-1;j++)
        {
            if(processes[j+1].burst<processes[j].burst)
            {
                temp=processes[j];
                processes[j]=processes[j+1];
                processes[j+1]=temp;
            }
        }
    }
    for(int i=0;i<n;i++)
    {
        comp_time+=processes[i].burst;
        processes[i].turn_time=comp_time-processes[i].arr_time;
        avg_tat+=processes[i].turn_time;
    }
    for(int i=0;i<n;i++)
    {
    processes[i].waiting_time=processes[i].turn_time-processes[i].
    burst;
    avg_wait+=processes[i].waiting_time;
    }
    for(int i=0;i<n;i++)
    {
    printf("\nburst, arrival time for process:%d\t",i+1);
    printf("%d\t",processes[i].burst);
    printf("%d\t",processes[i].arr_time);
    printf("%d\t",processes[i].turn_time);
    printf("%d\n",processes[i].waiting_time);
    }
    printf("average waiting time: %f\n",avg_wait/n);
    printf("average turn around time: %f\n",avg_tat/n);
}

int main()
{
    int n;
    printf("enter the number of processes:\t");
    scanf("%d",&n);
    proc processes[n];
    for(int i=0;i<n;i++)
    {
        printf("enter the burst, arrival time for process:%d\n",i+1);
        scanf("%d",&processes[i].burst);
        scanf("%d",&processes[i].arr_time);
    }
    for(int i=0;i<n;i++)
    {
        printf("burst, arrival time for process:%d\t",i+1);
        printf("%d\t",processes[i].burst);
        printf("%d\n",processes[i].arr_time);
    }
    sjf(processes,n);
}
